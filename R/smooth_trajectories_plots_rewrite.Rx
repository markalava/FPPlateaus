### 2022-08-18: Started re-writing to separate out each panel of the plot in case they need to be produced separately. Come back to this later if you *really* need it.



### Get the trajectories and thresholds for all panels.

smooth_trajectories_plot_get_trajectories <- function(iso, iso_all = get_iso_all(),
                                indicator = c("Modern", "MetDemModMeth"),
                                smooth_type = c("Trajectories", "Moving Average", "Local Linear Smooth"),
                                range_condition_lower, range_condition_upper,
                                change_condition = 0.5 / 100,
                                filter_width = 3,
                                stall_probability_threshold,
                                differences = 1,
                                run_name, output_dir, denominator_count_filename) {

    indicator <- match.arg(indicator)
    smooth_type <- match.arg(smooth_type, several.ok = TRUE)
    n_smooths <- length(smooth_type)
    if (is.null(title)) title <- paste0(get_name(iso, iso_all), ", ", indicator)

    ## -------* Get Trajectories

    tra <- make_stall_prob_df(iso,
                              run_name = run_name, output_dir = output_dir, add_iso_column = TRUE,
                              differences = differences,
                              change_condition = change_condition,
                              filter_width = filter_width,
                              denominator_count_filename = denominator_count_filename,
                              .special_return_trajectories = TRUE)

    ## -------* Convert Proportions to Percentages !!!!

    tra <- tra * 100
    change_condition <- change_condition * 100
    range_condition_lower <- range_condition_lower * 100
    range_condition_upper <- range_condition_upper * 100

    ## -------* Stall Probabilities

    fpind_tra <- tra[, indicator, ]
    fpind_median <- apply(fpind_tra, 1, quantile, probs = 0.5)
    stall_prob <- rowMeans(apply(fpind_tra, 2, function(z) c(NA, diff(z)) < change_condition),
                           na.rm = TRUE)
    stall_prob_gt_xx <- stall_prob > stall_probability_threshold &
        is.finite(stall_prob) & fpind_median >= range_condition_lower &
        fpind_median <= range_condition_upper

    ## -------* END

    return(list(change_condition = change_condition,
                range_condition_lower = range_condition_lower,
                range_condition_upper = range_condition_upper,
                fpind_tra = fpind_tra,
                fpind_median = fpind_median,
                stall_prob_gt_xx = stall_prob_gt_xx,
                differences = differences,
                filter_width = filter_width,
                stall_probability_threshold = stall_probability_threshold))
}


### Panel (a): Raw Trajectories

smooth_trajectories_plot_raw_traj <- function(all_traj, panel_letter = 0,
                                              main = paste0("(", letters[panel_letter], ") Trajectories"),
                                              subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5

    ylim <- c(min(all_traj$fpind_tra[, 1:5]) - 0.01 * min(all_traj$fpind_tra[, 1:5]),
              max(all_traj$fpind_tra[, 1:5]) + 0.01 * max(all_traj$fpind_tra[, 1:5]))

    ylim_diff <- NULL
    panel_letter <- panel_letter + 1

        matplot(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, all_traj$fpind_tra[, 3:5],
                type = "l", col = "grey", lty = 1, xlab = "year", ylab = "mCP (%)",
                main = main,
                sub = subcaption,
                ylim = ylim)
        lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, all_traj$fpind_tra[, 1],
              col = "red")
        lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, all_traj$fpind_tra[, 2],
              col = "yellow4")
        lines(x = as.numeric(names(all_traj$fpind_median)) - 0.5, all_traj$fpind_median, lwd = 2, lty = 2)
        rug(x = x_vec[all_traj$stall_prob_gt_xx], lwd = 2, ticksize = 0.08)
        legend("topleft", lty = c(2, rep(1, 3)), lwd = c(2, rep(1, 3)),
               col = c("black", "red", "yellow4", "grey"),
               legend = c("Median", "Trajectory 1", "Trajectory 2", "Other trajectories"))
}


### Panel (b): Raw Trajectories, Annual Differences

smooth_trajectories_plot_raw_traj_ann_diff <- function(all_traj, panel_letter = 0,
                                              main = paste0("(", letters[panel_letter], ") Annual Differences"),
                                              subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5

        y_diff <- apply(all_traj$fpind_tra[, 3:5], 2,
                        function(z) c(NA, diff(z, differences = all_traj$differences)))

        y_vec <- c(NA, diff(all_traj$fpind_tra[, 1]))
        y_vec2 <- c(NA, diff(all_traj$fpind_tra[, 2]))

        ylim_diff <- c(min(y_diff, na.rm = TRUE) - 0.1 * abs(min(y_diff, na.rm = TRUE)),
                       max(y_diff, na.rm = TRUE) + 0.1 * max(y_diff, na.rm = TRUE))

        matplot(x_vec, y_diff,
                col = "grey", type = "l", lty = 1, xlab = "year", ylab = "year-on-year difference (% points)",
                ## ylim = c(min(c(y_vec, y_vec2), na.rm = TRUE) * 1.2,
                ##          max(c(y_vec, y_vec2), na.rm = TRUE) * 1.1),
                main = main,
                sub = subcaption,
                ylim = ylim_diff)
        lines(x_vec, y_vec,
              col = "red", type = "l", xlab = "year", ylab = "year-on-year difference")
        lines(x_vec, y_vec2,
              col = "yellow4", type = "l", xlab = "year", ylab = "year-on-year difference")
        abline(h = all_traj$change_condition, lty = 2, col = "blue")
        rug(x = x_vec[all_traj$stall_prob_gt_xx], lwd = 2, ticksize = 0.08)
        legend("topleft", lty = c(1, 1, 1, 2),
               col = c("red", "yellow4", "grey", "blue"),
               legend = c("Trajectory 1", "Trajectory 2", "Other trajectories",
                          paste0(all_traj$change_condition, "% threshold")))
}


### Panel (c): Moving Averages

smooth_trajectories_plot_ma <- function(all_traj, panel_letter = 0,
                                        main = paste0("(", letters[panel_letter], ") Moving Average (width ", all_traj$filter_width, ") of Trajectories"),
                                        subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    ## Data

    fpind_tra_f <- apply(all_traj$fpind_tra, 2, stats::filter, f = rep(1/all_traj$filter_width, all_traj$filter_width), sides = 2)
    stall_prob_f <- rowMeans(apply(fpind_tra_f, 2, function(z) c(NA, diff(z)) < 0.5), na.rm = TRUE)

    stall_prob_f_gt_80 <- stall_prob_f > all_traj$stall_probability_threshold &
        is.finite(stall_prob_f) & all_traj$fpind_median >= all_traj$range_condition_lower &
        all_traj$fpind_median <= all_traj$range_condition_upper

        ## Smoothed trajectories

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5

    ylim <- c(min(all_traj$fpind_tra[, 1:5]) - 0.01 * min(all_traj$fpind_tra[, 1:5]),
              max(all_traj$fpind_tra[, 1:5]) + 0.01 * max(all_traj$fpind_tra[, 1:5]))

    ylim_diff <- NULL

        panel_letter <- panel_letter + 1

        matplot(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 3:5],
                type = "l", col = "grey", lty = 1, xlab = "year", ylab = "mCP (%)",
                main = main,
                sub = subcaption,
                ylim = ylim)
        lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 1],
              col = "red")
        lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 2],
              col = "yellow4")
        lines(x = as.numeric(names(all_traj$fpind_median)) - 0.5, all_traj$fpind_median, lwd = 2, lty = 2)
        rug(x = x_vec[stall_prob_f_gt_80], lwd = 2, ticksize = 0.08)
        legend("topleft", lty = c(2, rep(1, 3)), lwd = c(2, rep(1, 3)),
               col = c("black", "red", "yellow4", "grey"),
               legend = c("Median", "Trajectory 1", "Trajectory 2", "Other trajectories"))
    }


### Panel (d): Moving Averages, Differences

smooth_trajectories_plot_ma_ann_diff <- function(all_traj, panel_letter = 0,
                                        main = paste0("(", letters[panel_letter], ") Annual Differences of Moving Average"),
                                        subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    ## Data

    fpind_tra_f <- apply(all_traj$fpind_tra, 2, stats::filter, f = rep(1/all_traj$filter_width, all_traj$filter_width), sides = 2)
    stall_prob_f <- rowMeans(apply(fpind_tra_f, 2, function(z) c(NA, diff(z)) < 0.5), na.rm = TRUE)

    stall_prob_f_gt_80 <- stall_prob_f > all_traj$stall_probability_threshold &
        is.finite(stall_prob_f) & all_traj$fpind_median >= all_traj$range_condition_lower &
        all_traj$fpind_median <= all_traj$range_condition_upper

        ## Smoothed trajectories

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5

    ylim <- c(min(all_traj$fpind_tra[, 1:5]) - 0.01 * min(all_traj$fpind_tra[, 1:5]),
              max(all_traj$fpind_tra[, 1:5]) + 0.01 * max(all_traj$fpind_tra[, 1:5]))

        y_vec <- c(NA, diff(fpind_tra_f[, 1]))
        y_vec2 <- c(NA, diff(fpind_tra_f[, 2]))

        y_diff <- apply(fpind_tra_f[, 3:5], 2,
                        function(z) c(NA, diff(z, differences = all_traj$differences)))

    ylim_diff <- NULL

        if (is.null(ylim_diff))
            ylim_diff <- c(min(y_diff, na.rm = TRUE) - 0.1 * abs(min(y_diff, na.rm = TRUE)),
                           max(y_diff, na.rm = TRUE) + 0.1 * max(y_diff, na.rm = TRUE))

        matplot(x_vec, y_diff,
                col = "grey", type = "l", lty = 1, xlab = "year", ylab = "year-on-year difference (% points)",
                ## ylim = c(min(c(y_vec, y_vec2), na.rm = TRUE) * 1.2,
                ##          max(c(y_vec, y_vec2), na.rm = TRUE) * 1.1),
                main = main,
                sub = subcaption,
                ylim = ylim_diff)
        lines(x_vec, y_vec,
              col = "red", type = "l", xlab = "year", ylab = "year-on-year difference")
        lines(x_vec, y_vec2,
              col = "yellow4", type = "l", xlab = "year", ylab = "year-on-year difference")
        abline(h = all_traj$change_condition, lty = 2, col = "blue")
        rug(x = x_vec[stall_prob_f_gt_80], lwd = 2, ticksize = 0.08)
        legend("topleft", lty = c(1, 1, 1, 2),
               col = c("red", "yellow4", "grey", "blue"),
               legend = c("Trajectory 1", "Trajectory 2", "Other trajectories",
                          paste0(all_traj$change_condition, "% threshold")))
    }


### Panel (e): Linear Smooth

smooth_trajectories_plot_loc_lin <- function(all_traj, panel_letter = 0,
                                             main = paste0("(", letters[panel_letter], ") Local Linear Smooth",
                                             { if (identical(all_traj$smooth_type, "Moving Average")) {
                                                   paste0(" (width ", all_traj$filter_width, ")")
                                               } else { "" }
                                             },
                                             " of Trajectories"),
                                             subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    ## Data

    fpind_tra_lm_local <- lm_local_arr(all_traj$fpind_tra, bandwidth = all_traj$filter_width)
    fpind_tra_f <- fpind_tra_lm_local[, "Y_hat", ]
    stall_prob_f <- rowMeans(fpind_tra_lm_local[, "beta", ] < all_traj$change_condition, na.rm = TRUE)

    stall_prob_f_gt_80 <- stall_prob_f > all_traj$stall_probability_threshold &
        is.finite(stall_prob_f) & all_traj$fpind_median >= all_traj$range_condition_lower &
        all_traj$fpind_median <= all_traj$range_condition_upper

    ## Smoothed trajectories

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5
    ylim <- c(min(all_traj$fpind_tra[, 1:5]) - 0.01 * min(all_traj$fpind_tra[, 1:5]),
              max(all_traj$fpind_tra[, 1:5]) + 0.01 * max(all_traj$fpind_tra[, 1:5]))

    matplot(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 3:5],
            type = "l", col = "grey", lty = 1, xlab = "year", ylab = "mCP (%)",
            main = ,
            sub = subcaption,
            ylim = ylim)
    lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 1],
          col = "red")
    lines(as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5, fpind_tra_f[, 2],
          col = "yellow4")
    lines(x = as.numeric(names(all_traj$fpind_median)) - 0.5, all_traj$fpind_median, lwd = 2, lty = 2)
    rug(x = x_vec[stall_prob_f_gt_80], lwd = 2, ticksize = 0.08)
    legend("topleft", lty = c(2, rep(1, 3)), lwd = c(2, rep(1, 3)),
           col = c("black", "red", "yellow4", "grey"),
           legend = c("Median", "Trajectory 1", "Trajectory 2", "Other trajectories"))
}




smooth_trajectories_plot <- function(iso, iso_all = get_iso_all(),
                                indicator = c("Modern", "MetDemModMeth"),
                                smooth_type = c("Trajectories", "Moving Average", "Local Linear Smooth"),
                                range_condition_lower, range_condition_upper,
                                change_condition = 0.5 / 100,
                                filter_width = 3,
                                stall_probability_threshold,
                                differences = 1,
                                run_name, output_dir, denominator_count_filename,
                                title = NULL,
                                subcaption = "Vertical marks indicate stall years based on _all_ trajectories.") {

    indicator <- match.arg(indicator)
    smooth_type <- match.arg(smooth_type, several.ok = TRUE)
    n_smooths <- length(smooth_type)
    if (is.null(title)) title <- paste0(get_name(iso, iso_all), ", ", indicator)

    ## -------* Get Trajectories

    all_traj <- smooth_trajectories_plot_get_trajectories(iso = iso, iso_all = iso_all,
                                                      indicator = indicator,
                                                      smooth_type = smooth_type,
                                                      range_condition_lower, range_condition_upper,
                                                      change_condition = change_condition,
                                                      filter_width = filter_width,
                                                      stall_probability_threshold = stall_probability_threshold,
                                                      differences = differences,
                                                      run_name = run_name, output_dir = output_dir,
                                                      denominator_count_filename = denominator_count_filename)

    ## -------* Plots

    if (!is.na(title) && nchar(title)) {
        par(mar=c(5, 4, 2, 2) + 0.1)
        layout(rbind(rep(1, 2),
                     matrix(2:(3 + (n_smooths - 1) * 2), ncol = 2, byrow = TRUE)),
               heights = c(1, rep(3, n_smooths)))
        plot.new()
        text(0.5,0.5, title, cex = 2, font = 2)
    } else {
        par(mar=c(5, 4, 2, 2) + 0.1)
        layout(matrix(1:(2 + (n_smooths - 1) * 2), ncol = 2, byrow = TRUE),
               heights = rep(3, n_smooths))
    }

    x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5

    ylim <- c(min(all_traj$fpind_tra[, 1:5]) - 0.01 * min(all_traj$fpind_tra[, 1:5]),
              max(all_traj$fpind_tra[, 1:5]) + 0.01 * max(all_traj$fpind_tra[, 1:5]))

    ylim_diff <- NULL

    panel_letter <- 0

    ## -------** Raw Trajectories

    if ("Trajectories" %in% smooth_type) {

        ## Trajecotries and median
        smooth_trajectories_plot_raw_traj(all_traj, panel_letter = panel_letter)

        ## Annual Differences
        panel_letter <- panel_letter + 1
        smooth_trajectories_plot_raw_traj_ann_diff(all_traj, panel_letter = panel_letter)

    }

    ## -------** Columns for smooths

    if ("Moving Average" %in% smooth_type) {

        ## Smoothed trajectories
        panel_letter <- panel_letter + 1
        smooth_trajectories_plot_ma(all_traj, panel_letter = panel_letter)

        ## Differences or coefficients
        panel_letter <- panel_letter + 1
        smooth_trajectories_plot_ma_ann_diff(all_traj, panel_letter = panel_letter)

    }

    if ("Local Linear Smooth" %in% smooth_type) {

        ## Smoothed Trajectories
        panel_letter <- panel_letter + 1
        smooth_trajectories_plot_loc_lin(all_traj, panel_letter = panel_letter)

        ## Differences or coefficients

        panel_letter <- panel_letter + 1

        x_vec <- as.numeric(dimnames(all_traj$fpind_tra)[[1]]) - 0.5
        y_vec <- fpind_tra_lm_local[, "beta", 1]
        y_vec2 <- fpind_tra_lm_local[, "beta", 2]

        y_diff <- fpind_tra_lm_local[, "beta", 3:5]
        if (is.null(ylim_diff))
            ylim_diff <- c(min(y_diff, na.rm = TRUE) - 0.1 * abs(min(y_diff, na.rm = TRUE)),
                           max(y_diff, na.rm = TRUE) + 0.1 * max(y_diff, na.rm = TRUE))

        matplot(x_vec, y_diff,
                col = "grey", type = "l", lty = 1, xlab = "year", ylab = "slope coefficients",
                ## ylim = c(min(c(y_vec, y_vec2), na.rm = TRUE) * 1.2,
                ##          max(c(y_vec, y_vec2), na.rm = TRUE) * 1.1),
                main = paste0("(", letters[panel_letter], ") Slope Coefficients of Local Linear Smooth"),
                sub = subcaption,
                ylim = ylim_diff)
        lines(x_vec, y_vec,
               col = "red", xlab = "year", ylab = "change per year")
        lines(x_vec, y_vec2,
               col = "yellow4", xlab = "year", ylab = "change per year")
        abline(h = all_traj$change_condition, lty = 2, col = "blue")
        rug(x = x_vec[stall_prob_f_gt_80], lwd = 2, ticksize = 0.08)
        legend("topleft", lty = c(rep(1, 3), 2),
               col = c("red", "yellow4", "grey", "blue"),
               legend = c("Trajectory 1", "Trajectory 2", "Other trajectories",
                          paste0(all_traj$change_condition, "% threshold")))

    }

}
